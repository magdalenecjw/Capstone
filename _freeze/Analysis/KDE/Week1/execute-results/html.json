{
  "hash": "6524300ee6d1b6537eea5675f6b5ceed",
  "result": {
    "markdown": "---\npagetitle: KDE Analysis | Capstone\ntitle: KDE Analysis (1)\n---\n\n\n![](../../Images/3.png){width=\"500\"}\n\n# Getting Started\n\nThe code chunk below uses `p_load()` function of pacman package to check if the required packages have been installed on the computer. If they are, the packages will be launched.\n\nThe packages used are: \n\n- sf package is used for importing, managing, and processing geospatial data. \n- tidyverse package for aspatial data wrangling. \n- spatstat package to perform 1st-order spatial point patterns analysis and derive kernel density estimation (KDE) layer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sp, tidyverse, spatstat, tmap)\n```\n:::\n\n\nIn the code chunk below, the [cleaned data files](DataPrep.qmd) are loaded into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load base map\nmpsz = st_read(dsn = \"../data/geospatial\", \n               layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\magdalenecjw\\Capstone\\Analysis\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\n# Load rds file\npickup_sf <- st_as_sf(read_rds(\"../data/rds/pickup_sf.rds\"))\ndropoff_sf <- st_as_sf(read_rds(\"../data/rds/dropoff_sf.rds\"))\n```\n:::\n\n\n# Convert Pickup and Dropoff location sf dataframes into spatstatâ€™s ppp object format\n\nConvert the sf dataframe to a ppp object using `as.ppp()` function from the spatstat package. The result is a marked planar point pattern. To change a marked planar point pattern to just a planar point pattern, simply remove the marks associated with each point using `marks(pickup_ppp) <- NULL`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npickup_ppp <- as.ppp(pickup_sf)\nmarks(pickup_ppp) <- NULL\n\nplot(pickup_ppp)\n```\n\n::: {.cell-output-display}\n![](Week1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndropoff_ppp <- as.ppp(dropoff_sf)\nmarks(dropoff_ppp) <- NULL\n\nplot(dropoff_ppp)\n```\n\n::: {.cell-output-display}\n![](Week1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create border of Singapore's land area\nmpsz_border <- st_cast(mpsz %>%\n                         summarize(), \"POLYGON\")\n\n# Convert the resulting sf object to an owin object\nmpsz_owin <- as.owin(mpsz_border)\n\nplot(mpsz_owin)\n```\n\n::: {.cell-output-display}\n![](Week1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npickup_owin = pickup_ppp[mpsz_owin]\npickup_owin <- rescale(pickup_owin, 1000, \"km\")\n\npickup_kde <- density(pickup_owin, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\") \n\nplot(pickup_kde)\n```\n\n::: {.cell-output-display}\n![](Week1_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndropoff_owin = dropoff_ppp[mpsz_owin]\ndropoff_owin <- rescale(dropoff_owin, 1000, \"km\")\n\ndropoff_kde <- density(dropoff_owin, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\") \n\nplot(dropoff_kde)\n```\n\n::: {.cell-output-display}\n![](Week1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Week1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}